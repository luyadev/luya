name: Tests

on: [push, pull_request]

env:
  DEFAULT_COMPOSER_FLAGS: "--prefer-dist --no-interaction --no-progress --optimize-autoloader"
  PHPUNIT_EXCLUDE_GROUP: mssql,oci,wincache,xcache,zenddata,cubrid

jobs:
  phpunit:
    name: PHP ${{ matrix.php }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: myapp_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        php: ['5.4', '5.5', '5.6', '7.0', '7.1', '7.2', '7.3', '7.4']

    steps:
      ## checkout the repoistory 
      - name: Checkout Repo
        uses: actions/checkout@v2

      ## Install(?) php
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: apc, curl, dom, imagick, intl, mbstring, mcrypt, memcached, mysql, pdo, pdo_mysql, pdo_pgsql, pdo_sqlite, pgsql, sqlite
          ini-values: date.timezone='UTC'
     
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer update $DEFAULT_COMPOSER_FLAGS

      - name: Setup Test DB
        run: mysql -u root myapp_test < tests/data/sql/1.0.0.sql

      - name: PHP Unit tests for PHP 
        run: vendor/bin/phpunit --verbose --configuration travis.phpunit.xml
